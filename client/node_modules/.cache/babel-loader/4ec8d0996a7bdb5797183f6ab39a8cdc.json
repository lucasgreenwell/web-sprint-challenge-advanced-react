{"ast":null,"code":"// write your custom hook here to control your checkout form\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst useForm = (key, initialValue) => {\n  // email value ✅\n  // handlechanges should handle all inputs\n  const [values, setValues] = useLocalStorage(key, initialValue);\n\n  const handleChanges = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  }; // const handleBlur = e => {\n  // }\n  // const handleValidation\n\n\n  const clearForm = e => {\n    if (e) e.preventDefault();\n    setValues(initialValue);\n  };\n\n  return [values, handleChanges, clearForm];\n};\n\nexport default useForm; // JS destructuring -\n// destructure objects\n//   name matters\n//   order does not matter\n// const myObj = {\n//   a: \"1\",\n//   b: \"2\",\n//   c: \"3\"\n// };\n// const { b, c, a } = myObj;\n// console.log(b, c, a);\n// // destrcutring arrays\n// //   names don't matter\n// //   order matters\n// const myArr = [\"1\", \"2\", \"3\"];\n// const [banana, two, apple] = myArr;\n// console.log(banana, two, apple);","map":{"version":3,"sources":["/Users/lucasgreenwell/Projects/TLWeb30/web-sprint-challenge-advanced-react/client/src/hooks/useForm.js"],"names":["useLocalStorage","useForm","key","initialValue","values","setValues","handleChanges","e","target","name","value","clearForm","preventDefault"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,mBAAhC;;AAEG,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AACxC;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,eAAe,CAACE,GAAD,EAAMC,YAAN,CAA3C;;AAEA,QAAMG,aAAa,GAAGC,CAAC,IAAI;AACzBF,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFlB,KAAD,CAAT;AAID,GALD,CALwC,CAYxC;AAEA;AAEA;;;AAEA,QAAMC,SAAS,GAAGJ,CAAC,IAAI;AACrB,QAAIA,CAAJ,EAAOA,CAAC,CAACK,cAAF;AACPP,IAAAA,SAAS,CAACF,YAAD,CAAT;AACD,GAHD;;AAKA,SAAO,CAACC,MAAD,EAASE,aAAT,EAAwBK,SAAxB,CAAP;AACD,CAxBE;;AAyBH,eAAeV,OAAf,C,CACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA","sourcesContent":["// write your custom hook here to control your checkout form\nimport { useLocalStorage } from \"./useLocalStorage\";\n\n   const useForm = (key, initialValue) => {\n  // email value ✅\n  // handlechanges should handle all inputs\n  const [values, setValues] = useLocalStorage(key, initialValue);\n\n  const handleChanges = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // const handleBlur = e => {\n\n  // }\n\n  // const handleValidation\n\n  const clearForm = e => {\n    if (e) e.preventDefault();\n    setValues(initialValue);\n  };\n\n  return [values, handleChanges, clearForm];\n};\nexport default useForm\n// JS destructuring -\n\n// destructure objects\n//   name matters\n//   order does not matter\n\n// const myObj = {\n//   a: \"1\",\n//   b: \"2\",\n//   c: \"3\"\n// };\n\n// const { b, c, a } = myObj;\n\n// console.log(b, c, a);\n\n// // destrcutring arrays\n// //   names don't matter\n// //   order matters\n\n// const myArr = [\"1\", \"2\", \"3\"];\n\n// const [banana, two, apple] = myArr;\n\n// console.log(banana, two, apple);\n"]},"metadata":{},"sourceType":"module"}